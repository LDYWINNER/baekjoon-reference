# 수 자료형 - Integer / Real Number

# Integer
a = 1000
b = -23
c = 0

# Real Number
d = 158.93
e = -2323.55
f = 5.  # 소수부가 0 일때는 0을 생략할 수 있음
g = -.9

h = 1e9  # 10억의 지수 표현 방식 (1e9 = 1 * 10 ** 9)
i = 75.23e1  # 75.23e1 = 75.23 * 10 ** 1 = 752.3)
j = 3954e-3  # 3954e-3 = 3954 * 10 ** -3 = 3.954)

k = 0.3 + 0.6
print(k)
if k == 0.9:
    print(True)
else:
    print(False)
# result: False
# 이유: 컴퓨터 시스템은 대체로 실수형을 저장하기 위해 4byte / 8byte 의 고정된 크기의 메모리를 할당하고
# 부동 소수점 방식(Floating-point) 방식을 사용하기 때문에 실수 정보를 표현하는 정확도에 한계를 가진다.
# 결론적으로, 컴퓨터는 실수를 정확하게 표현하지 못한다.

# 소수점 값을 비교하는 작업이 필요한 문제라면 round function을 이용하면 됨.
l = round(123.456, 2)
# 첫 번째 인자: 반올림하고자 하는 실수형 데이터
# 두 번째 인자: 반올림하고자 하는 위치 - 1
# result: 123.46
# 두 번째 인자를 안 넣으면 소수점 첫째 자리에서 반올림

# 코딩 테스트에서 실수형 데이터를 비교할 때는 소수점 다섯 번째에서 반올림한 결과가 같으면 정답으로 인정하는 방식으로 처리함.
m = 0.3 + 0.6
print(round(m, 4))
if round(m, 4) == 0.9:
    print(True)
else:
    print(False)
# result: True
